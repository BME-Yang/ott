function [A] = StokesSphCoeffs(r,th,ph,ALF,eta,comp,rmax)
% Evaluates the coefficients to the unknowns (series coefficients)
% in the general series solution to the Stokes equations in spherical
% coordinates, using the 'comp' component of the velocity flow vector.
%
%   There are 12 coefficients for every combination of m and n, (except
%   for when m=0 there is only 6), since there are three series,
%   each with two directions and each containing two terms for all
%   combinations of m and n.

%   Code designed and written by Lachlan James Gibson
%   lachlan.gibson@uqconnect.edu.au
%   Last modified 2016-05-19

%% Pre-calculate values for efficiency
costh=cos(th);
cos2th=cos(2*th);
sinph=sin(ph);
cosph=cos(ph);

if comp==1
%% vx
% A{coefficient,tilde,Sign}
A{1,1,1}=@(n,m) rmax.^-n.*(...
    (n+1-m).*(3+n).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*cosph.*cos(m.*ph)...
    -ALF{n}(:,m+1).*(1+n).*(3+(3+2*n).*cos2th).*cosph.*cos(m.*ph)/2 ...
    +ALF{n}(:,m+1).*m.*(3+n).*sinph.*sin(m.*ph)...
    ).*r.^(n+1)./(2*(1+n).*(3+2*n)*eta);

A{1,2,1}=@(n,m) rmax.^-n.*(...
    (n+1-m).*(3+n).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*cosph.*sin(m.*ph)...
    -ALF{n}(:,m+1).*(1+n).*(3+(3+2*n).*cos2th).*cosph.*sin(m.*ph)/2 ...
    -ALF{n}(:,m+1).*m.*(3+n).*sinph.*cos(m.*ph)...
    ).*r.^(n+1)./(2*(1+n).*(3+2*n)*eta);

A{2,1,1}=@(n,m) rmax.^-n.*(...
    (n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*cosph.*cos(m.*ph)...
    -ALF{n}(:,m+1).*(1+(1+2*n).*cos2th).*cosph.*cos(m.*ph)/2 ...
    +ALF{n}(:,m+1).*m.*sinph.*sin(m.*ph)...
    ).*r.^(n-1);

A{2,2,1}=@(n,m) rmax.^-n.*(...
    (n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*cosph.*sin(m.*ph)...
    -ALF{n}(:,m+1).*(1+(1+2*n).*cos2th).*cosph.*sin(m.*ph)/2 ...
    -ALF{n}(:,m+1).*m.*sinph.*cos(m.*ph)...
    ).*r.^(n-1);

A{3,1,1}=@(n,m) rmax.^-n.*(...
    (n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*sinph.*cos(m.*ph)...
    -ALF{n}(:,m+1).*(n+1).*costh.*sinph.*cos(m.*ph) ...
    -ALF{n}(:,m+1).*m.*costh.*cosph.*sin(m.*ph)...
    ).*r.^n;

A{3,2,1}=@(n,m) rmax.^-n.*(...
    (n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*sinph.*sin(m.*ph)...
    -ALF{n}(:,m+1).*(n+1).*costh.*sinph.*sin(m.*ph) ...
    +ALF{n}(:,m+1).*m.*costh.*cosph.*cos(m.*ph)...
    ).*r.^n;

A{1,1,2}=@(n,m) (...
    -(n+1-m).*(n-2).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*cosph.*cos(m.*ph)...
    +ALF{n}(:,m+1).*(1+n).*(n-1-cos2th).*cosph.*cos(m.*ph) ...
    -ALF{n}(:,m+1).*m.*(n-2).*sinph.*sin(m.*ph)...
    ).*r.^(-n)./(2*n.*(2*n-1)*eta);

A{1,2,2}=@(n,m) (...
    -(n+1-m).*(n-2).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*cosph.*sin(m.*ph)...
    +ALF{n}(:,m+1).*(1+n).*(n-1-cos2th).*cosph.*sin(m.*ph) ...
    +ALF{n}(:,m+1).*m.*(n-2).*sinph.*cos(m.*ph)...
    ).*r.^(-n)./(2*n.*(2*n-1)*eta);

A{2,1,2}=@(n,m) (...
    (n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*cosph.*cos(m.*ph)...
    -ALF{n}(:,m+1).*(1+n).*cosph.*cos(m.*ph) ...
    +ALF{n}(:,m+1).*m.*sinph.*sin(m.*ph)...
    ).*r.^(-n-2);

A{2,2,2}=@(n,m) (...
    (n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*cosph.*sin(m.*ph)...
    -ALF{n}(:,m+1).*(1+n).*cosph.*sin(m.*ph) ...
    -ALF{n}(:,m+1).*m.*sinph.*cos(m.*ph)...
    ).*r.^(-n-2);

A{3,1,2}=@(n,m) (...
    (n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*sinph.*cos(m.*ph)...
    -ALF{n}(:,m+1).*(1+n).*costh.*sinph.*cos(m.*ph) ...
    -ALF{n}(:,m+1).*m.*costh.*cosph.*sin(m.*ph)...
    ).*r.^(-n-1);

A{3,2,2}=@(n,m) (...
    (n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*sinph.*sin(m.*ph)...
    -ALF{n}(:,m+1).*(1+n).*costh.*sinph.*sin(m.*ph) ...
    +ALF{n}(:,m+1).*m.*costh.*cosph.*cos(m.*ph)...
    ).*r.^(-n-1);

elseif comp==2
%% vy
% A{coefficient,tilde,Sign}
A{1,1,1}=@(n,m) rmax.^-n.*(...
    (n+1-m).*(3+n).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*sinph.*cos(m.*ph)...
    -ALF{n}(:,m+1).*(1+n).*(3+(3+2*n).*cos2th).*sinph.*cos(m.*ph)/2 ...
    -ALF{n}(:,m+1).*m.*(3+n).*cosph.*sin(m.*ph)...
    ).*r.^(n+1)./(2*(1+n).*(3+2*n)*eta);

A{1,2,1}=@(n,m) rmax.^-n.*(...
    (n+1-m).*(3+n).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*sinph.*sin(m.*ph)...
    -ALF{n}(:,m+1).*(1+n).*(3+(3+2*n).*cos2th).*sinph.*sin(m.*ph)/2 ...
    +ALF{n}(:,m+1).*m.*(3+n).*cosph.*cos(m.*ph)...
    ).*r.^(n+1)./(2*(1+n).*(3+2*n)*eta);

A{2,1,1}=@(n,m) rmax.^-n.*(...
    (n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*sinph.*cos(m.*ph)...
    -ALF{n}(:,m+1).*(1+(1+2*n).*cos2th).*sinph.*cos(m.*ph)/2 ...
    -ALF{n}(:,m+1).*m.*cosph.*sin(m.*ph)...
    ).*r.^(n-1);

A{2,2,1}=@(n,m) rmax.^-n.*(...
    (n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*sinph.*sin(m.*ph)...
    -ALF{n}(:,m+1).*(1+(1+2*n).*cos2th).*sinph.*sin(m.*ph)/2 ...
    +ALF{n}(:,m+1).*m.*cosph.*cos(m.*ph)...
    ).*r.^(n-1);

A{3,1,1}=@(n,m) rmax.^-n.*(...
    -(n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*cosph.*cos(m.*ph)...
    +ALF{n}(:,m+1).*(n+1).*costh.*cosph.*cos(m.*ph) ...
    -ALF{n}(:,m+1).*m.*costh.*sinph.*sin(m.*ph)...
    ).*r.^n;

A{3,2,1}=@(n,m) rmax.^-n.*(...
    -(n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*cosph.*sin(m.*ph)...
    +ALF{n}(:,m+1).*(n+1).*costh.*cosph.*sin(m.*ph) ...
    +ALF{n}(:,m+1).*m.*costh.*sinph.*cos(m.*ph)...
    ).*r.^n;

A{1,1,2}=@(n,m) (...
    -(n+1-m).*(n-2).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*sinph.*cos(m.*ph)...
    +ALF{n}(:,m+1).*(1+n).*(n-1-cos2th).*sinph.*cos(m.*ph) ...
    +ALF{n}(:,m+1).*m.*(n-2).*cosph.*sin(m.*ph)...
    ).*r.^(-n)./(2*n.*(2*n-1)*eta);

A{1,2,2}=@(n,m) (...
    -(n+1-m).*(n-2).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*sinph.*sin(m.*ph)...
    +ALF{n}(:,m+1).*(1+n).*(n-1-cos2th).*sinph.*sin(m.*ph) ...
    -ALF{n}(:,m+1).*m.*(n-2).*cosph.*cos(m.*ph)...
    ).*r.^(-n)./(2*n.*(2*n-1)*eta);

A{2,1,2}=@(n,m) (...
    (n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*sinph.*cos(m.*ph)...
    -ALF{n}(:,m+1).*(1+n).*sinph.*cos(m.*ph) ...
    -ALF{n}(:,m+1).*m.*cosph.*sin(m.*ph)...
    ).*r.^(-n-2);

A{2,2,2}=@(n,m) (...
    (n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*costh.*sinph.*sin(m.*ph)...
    -ALF{n}(:,m+1).*(1+n).*sinph.*sin(m.*ph) ...
    +ALF{n}(:,m+1).*m.*cosph.*cos(m.*ph)...
    ).*r.^(-n-2);

A{3,1,2}=@(n,m) (...
    -(n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*cosph.*cos(m.*ph)...
    +ALF{n}(:,m+1).*(1+n).*costh.*cosph.*cos(m.*ph) ...
    -ALF{n}(:,m+1).*m.*costh.*sinph.*sin(m.*ph)...
    ).*r.^(-n-1);

A{3,2,2}=@(n,m) (...
    -(n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*cosph.*sin(m.*ph)...
    +ALF{n}(:,m+1).*(1+n).*costh.*cosph.*sin(m.*ph) ...
    +ALF{n}(:,m+1).*m.*costh.*sinph.*cos(m.*ph)...
    ).*r.^(-n-1);

elseif comp==3
%% vz
% A{coefficient,tilde,Sign}
A{1,1,1}=@(n,m) rmax.^-n.*(...
    -(n+1-m).*(3+n).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3)))+(1+n).*(3+2*n).*ALF{n}(:,m+1).*costh...
    ).*cos(m.*ph).*r.^(n+1)./(2*(1+n).*(3+2*n)*eta);

A{1,2,1}=@(n,m) rmax.^-n.*(...
    -(n+1-m).*(3+n).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3)))+(1+n).*(3+2*n).*ALF{n}(:,m+1).*costh...
    ).*sin(m.*ph).*r.^(n+1)./(2*(1+n).*(3+2*n)*eta);

A{2,1,1}=@(n,m) rmax.^-n.*(...
    -(n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3)))+(1+2*n).*ALF{n}(:,m+1).*costh...
    ).*cos(m.*ph).*r.^(n-1);

A{2,2,1}=@(n,m) rmax.^-n.*(...
    -(n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3)))+(1+2*n).*ALF{n}(:,m+1).*costh...
    ).*sin(m.*ph).*r.^(n-1);

A{3,1,1}=@(n,m) rmax.^-n.*ALF{n}(:,m+1).*m.*r.^n.*sin(m.*ph);

A{3,2,1}=@(n,m) -rmax.^-n.*ALF{n}(:,m+1).*m.*r.^n.*cos(m.*ph);

A{1,1,2}=@(n,m) (...
    (n+1-m).*(n-2).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3)))+2*ALF{n}(:,m+1).*(1+n).*costh ...
    ).*cos(m.*ph).*r.^(-n)./(2*n.*(2*n-1)*eta);

A{1,2,2}=@(n,m) (...
    (n+1-m).*(n-2).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3)))+2*ALF{n}(:,m+1).*(1+n).*costh ...
    ).*sin(m.*ph).*r.^(-n)./(2*n.*(2*n-1)*eta);

A{2,1,2}=@(n,m) -(n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*cos(m.*ph).*r.^(-n-2);

A{2,2,2}=@(n,m) -(n+1-m).*ALF{n+1}(:,m+1).*sqrt((n+1+m).*(2*n+1)./((n+1-m).*(2*n+3))).*sin(m.*ph).*r.^(-n-2);

A{3,1,2}=@(n,m) ALF{n}(:,m+1).*m.*sin(m.*ph).*r.^(-n-1);

A{3,2,2}=@(n,m) -ALF{n}(:,m+1).*m.*cos(m.*ph).*r.^(-n-1);

elseif comp==4
%% p
% A{coefficient,tilde,Sign}
A{1,1,1}=@(n,m) rmax.^-n.*r.^n.*ALF{n}(:,m+1).*cos(m.*ph);
A{1,2,1}=@(n,m) rmax.^-n.*r.^n.*ALF{n}(:,m+1).*sin(m.*ph);
A{1,1,2}=@(n,m) r.^(-n-1).*ALF{n}(:,m+1).*cos(m.*ph);
A{1,2,2}=@(n,m) r.^(-n-1).*ALF{n}(:,m+1).*sin(m.*ph);

A{2,1,1}=@(n,m) zeros(size(th));
A{2,2,1}=@(n,m) zeros(size(th));
A{2,1,2}=@(n,m) zeros(size(th));
A{2,2,2}=@(n,m) zeros(size(th));

A{3,1,1}=@(n,m) zeros(size(th));
A{3,2,1}=@(n,m) zeros(size(th));
A{3,1,2}=@(n,m) zeros(size(th));
A{3,2,2}=@(n,m) zeros(size(th));

end
end

